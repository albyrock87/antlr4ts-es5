{"version":3,"sources":["FailedPredicateException.js","../src/FailedPredicateException.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","RecognitionException_1","require","Decorators_1","PredicateTransition_1","FailedPredicateException","recognizer","predicate","message","inputStream","context","formatMessage","s","interpreter","atn","states","state","trans","transition","PredicateTransition","_ruleIndex","ruleIndex","_predicateIndex","predIndex","_predicate","currentToken","RecognitionException","NotNull"],"mappings":"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","file":"FailedPredicateException.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RecognitionException_1 = require(\"./RecognitionException\");\nconst Decorators_1 = require(\"./Decorators\");\nconst PredicateTransition_1 = require(\"./atn/PredicateTransition\");\n/** A semantic predicate failed during validation.  Validation of predicates\n *  occurs when normally parsing the alternative just like matching a token.\n *  Disambiguating predicate evaluation occurs when we test a predicate during\n *  prediction.\n */\nlet FailedPredicateException = class FailedPredicateException extends RecognitionException_1.RecognitionException {\n    constructor(recognizer, predicate, message) {\n        super(recognizer, recognizer.inputStream, recognizer.context, FailedPredicateException.formatMessage(predicate, message));\n        let s = recognizer.interpreter.atn.states[recognizer.state];\n        let trans = s.transition(0);\n        if (trans instanceof PredicateTransition_1.PredicateTransition) {\n            this._ruleIndex = trans.ruleIndex;\n            this._predicateIndex = trans.predIndex;\n        }\n        else {\n            this._ruleIndex = 0;\n            this._predicateIndex = 0;\n        }\n        this._predicate = predicate;\n        super.setOffendingToken(recognizer, recognizer.currentToken);\n    }\n    get ruleIndex() {\n        return this._ruleIndex;\n    }\n    get predicateIndex() {\n        return this._predicateIndex;\n    }\n    get predicate() {\n        return this._predicate;\n    }\n    static formatMessage(predicate, message) {\n        if (message) {\n            return message;\n        }\n        return `failed predicate: {${predicate}}?`;\n    }\n};\n__decorate([\n    Decorators_1.NotNull\n], FailedPredicateException, \"formatMessage\", null);\nFailedPredicateException = __decorate([\n    __param(0, Decorators_1.NotNull)\n], FailedPredicateException);\nexports.FailedPredicateException = FailedPredicateException;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:51.4099946-07:00\n\nimport { AbstractPredicateTransition } from \"./atn/AbstractPredicateTransition\";\nimport { ATN } from \"./atn/ATN\";\nimport { ATNState } from \"./atn/ATNState\";\nimport { Parser } from \"./Parser\";\nimport { RecognitionException } from \"./RecognitionException\";\nimport { Recognizer } from \"./Recognizer\";\nimport { NotNull } from \"./Decorators\";\nimport { PredicateTransition } from \"./atn/PredicateTransition\";\n\n/** A semantic predicate failed during validation.  Validation of predicates\n *  occurs when normally parsing the alternative just like matching a token.\n *  Disambiguating predicate evaluation occurs when we test a predicate during\n *  prediction.\n */\nexport class FailedPredicateException extends RecognitionException {\n\t//private static serialVersionUID: number =  5379330841495778709L;\n\n\tprivate _ruleIndex: number;\n\tprivate _predicateIndex: number;\n\tprivate _predicate?: string;\n\n\tconstructor(@NotNull recognizer: Parser, predicate?: string, message?: string) {\n\t\tsuper(\n\t\t\trecognizer,\n\t\t\trecognizer.inputStream,\n\t\t\trecognizer.context,\n\t\t\tFailedPredicateException.formatMessage(predicate, message));\n\t\tlet s: ATNState = recognizer.interpreter.atn.states[recognizer.state];\n\n\t\tlet trans = s.transition(0) as AbstractPredicateTransition;\n\t\tif (trans instanceof PredicateTransition) {\n\t\t\tthis._ruleIndex = trans.ruleIndex;\n\t\t\tthis._predicateIndex = trans.predIndex;\n\t\t}\n\t\telse {\n\t\t\tthis._ruleIndex = 0;\n\t\t\tthis._predicateIndex = 0;\n\t\t}\n\n\t\tthis._predicate = predicate;\n\t\tsuper.setOffendingToken(recognizer, recognizer.currentToken);\n\t}\n\n\tget ruleIndex(): number {\n\t\treturn this._ruleIndex;\n\t}\n\n\tget predicateIndex(): number {\n\t\treturn this._predicateIndex;\n\t}\n\n\tget predicate(): string | undefined {\n\t\treturn this._predicate;\n\t}\n\n\t@NotNull\n\tprivate static formatMessage(predicate: string | undefined, message: string | undefined): string {\n\t\tif (message) {\n\t\t\treturn message;\n\t\t}\n\n\t\treturn `failed predicate: {${predicate}}?`;\n\t}\n}\n"]}