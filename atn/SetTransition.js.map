{"version":3,"sources":["atn/SetTransition.js","../src/atn/SetTransition.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","IntervalSet_1","require","Decorators_1","Token_1","Transition_1","SetTransition","set","IntervalSet","of","Token","INVALID_TYPE","symbol","minVocabSymbol","maxVocabSymbol","contains","toString","Transition","NotNull","prototype","Override","Nullable"],"mappings":"AAAA;ACAA;;;;;;;;;;;;;;;;;;;ADKA,IAAIA,UAAU,GAAI,UAAQ,SAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,QAAOC,OAAP,0DAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,OAAO,GAAI,UAAQ,SAAKA,OAAd,IAA0B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACrE,SAAO,UAAUhB,MAAV,EAAkBC,GAAlB,EAAuB;AAAEe,IAAAA,SAAS,CAAChB,MAAD,EAASC,GAAT,EAAcc,UAAd,CAAT;AAAqC,GAArE;AACH,CAFD;;AAGAR,MAAM,CAACM,cAAP,CAAsBI,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ACNA,IAAAC,aAAA,GAAAC,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAAC,YAAA,GAAAD,OAAA,CAAA,eAAA,CAAA;;AACA,IAAAE,OAAA,GAAAF,OAAA,CAAA,UAAA,CAAA;;AACA,IAAAG,YAAA,GAAAH,OAAA,CAAA,cAAA,CAAA;AAGA;;;AACA,IAAaI,aAAa;AAAA;AAAA;AAAA;;AAIzB;AACA,yBAAqBxB,MAArB,EAAiDyB,GAAjD,EAAiE;AAAA;;AAAA;AAChE,yHAAMzB,MAAN;;AACA,QAAIyB,GAAG,IAAI,IAAX,EAAiB;AAChBA,MAAAA,GAAG,GAAGN,aAAA,CAAAO,WAAA,CAAYC,EAAZ,CAAeL,OAAA,CAAAM,KAAA,CAAMC,YAArB,CAAN;AACA;;AAED,UAAKJ,GAAL,GAAWA,GAAX;AANgE;AAOhE;;AAZwB;AAAA;AAAA,4BA0BVK,MA1BU,EA0BMC,cA1BN,EA0B8BC,cA1B9B,EA0BoD;AAC5E,aAAO,KAAKP,GAAL,CAASQ,QAAT,CAAkBH,MAAlB,CAAP;AACA;AA5BwB;AAAA;AAAA,+BAgCV;AACd,aAAO,KAAKL,GAAL,CAASS,QAAT,EAAP;AACA;AAlCwB;AAAA;AAAA,wBAeJ;AACpB,aAAA;AAAA;AAAA;AACA;AAjBwB;AAAA;AAAA,wBAqBhB;AACR,aAAO,KAAKT,GAAZ;AACA;AAvBwB;AAAA;AAAA,EAASF,YAAA,CAAAY,UAAT,CAA1B;;AAECrC,UAAA,CAAA,CADCuB,YAAA,CAAAe,OACD,CAAA,ED2BEZ,aAAa,CAACa,SC3BhB,ED2B2B,KC3B3B,ED2BkC,KAAK,CC3BvC,CAAA;;AAaAvC,UAAA,CAAA,CADCuB,YAAA,CAAAiB,QACD,CAAA,EDiBEd,aAAa,CAACa,SCjBhB,EDiB2B,mBCjB3B,EDiBgD,ICjBhD,CAAA;;AAMAvC,UAAA,CAAA,CAFCuB,YAAA,CAAAiB,QAED,EADCjB,YAAA,CAAAe,OACD,CAAA,EDeEZ,aAAa,CAACa,SCfhB,EDe2B,OCf3B,EDeoC,ICfpC,CAAA;;AAKAvC,UAAA,CAAA,CADCuB,YAAA,CAAAiB,QACD,CAAA,EDaEd,aAAa,CAACa,SCbhB,EDa2B,SCb3B,EDasC,ICbtC,CAAA;;AAMAvC,UAAA,CAAA,CAFCuB,YAAA,CAAAiB,QAED,EADCjB,YAAA,CAAAe,OACD,CAAA,EDWEZ,aAAa,CAACa,SCXhB,EDW2B,UCX3B,EDWuC,ICXvC,CAAA;;AAhCYb,aAAa,GAAA1B,UAAA,CAAA,CAKZgB,OAAA,CAAA,CAAA,EAAAO,YAAA,CAAAe,OAAA,CALY,EAKetB,OAAA,CAAA,CAAA,EAAAO,YAAA,CAAAkB,QAAA,CALf,CAAA,EAAbf,aAAa,CAAb;AAAAP,OAAA,CAAAO,aAAA,GAAAA,aAAA","file":"SetTransition.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IntervalSet_1 = require(\"../misc/IntervalSet\");\nconst Decorators_1 = require(\"../Decorators\");\nconst Token_1 = require(\"../Token\");\nconst Transition_1 = require(\"./Transition\");\n/** A transition containing a set of values. */\nlet SetTransition = class SetTransition extends Transition_1.Transition {\n    // TODO (sam): should we really allow undefined here?\n    constructor(target, set) {\n        super(target);\n        if (set == null) {\n            set = IntervalSet_1.IntervalSet.of(Token_1.Token.INVALID_TYPE);\n        }\n        this.set = set;\n    }\n    get serializationType() {\n        return 7 /* SET */;\n    }\n    get label() {\n        return this.set;\n    }\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return this.set.contains(symbol);\n    }\n    toString() {\n        return this.set.toString();\n    }\n};\n__decorate([\n    Decorators_1.NotNull\n], SetTransition.prototype, \"set\", void 0);\n__decorate([\n    Decorators_1.Override\n], SetTransition.prototype, \"serializationType\", null);\n__decorate([\n    Decorators_1.Override,\n    Decorators_1.NotNull\n], SetTransition.prototype, \"label\", null);\n__decorate([\n    Decorators_1.Override\n], SetTransition.prototype, \"matches\", null);\n__decorate([\n    Decorators_1.Override,\n    Decorators_1.NotNull\n], SetTransition.prototype, \"toString\", null);\nSetTransition = __decorate([\n    __param(0, Decorators_1.NotNull), __param(1, Decorators_1.Nullable)\n], SetTransition);\nexports.SetTransition = SetTransition;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:37.3060135-07:00\n\nimport { ATNState } from \"./ATNState\";\nimport { IntervalSet } from \"../misc/IntervalSet\";\nimport { Override, NotNull, Nullable } from \"../Decorators\";\nimport { Token } from \"../Token\";\nimport { Transition } from \"./Transition\";\nimport { TransitionType } from \"./TransitionType\";\n\n/** A transition containing a set of values. */\nexport class SetTransition extends Transition {\n\t@NotNull\n\tpublic set: IntervalSet;\n\n\t// TODO (sam): should we really allow undefined here?\n\tconstructor(@NotNull target: ATNState, @Nullable set: IntervalSet) {\n\t\tsuper(target);\n\t\tif (set == null) {\n\t\t\tset = IntervalSet.of(Token.INVALID_TYPE);\n\t\t}\n\n\t\tthis.set = set;\n\t}\n\n\t@Override\n\tget serializationType(): TransitionType {\n\t\treturn TransitionType.SET;\n\t}\n\n\t@Override\n\t@NotNull\n\tget label(): IntervalSet {\n\t\treturn this.set;\n\t}\n\n\t@Override\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\n\t\treturn this.set.contains(symbol);\n\t}\n\n\t@Override\n\t@NotNull\n\tpublic toString(): string {\n\t\treturn this.set.toString();\n\t}\n}\n"]}