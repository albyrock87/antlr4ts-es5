{"version":3,"sources":["atn/SimulatorState.js","../src/atn/SimulatorState.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","Decorators_1","require","ParserRuleContext_1","SimulatorState","outerContext","s0","useContext","remainingOuterContext","ParserRuleContext","emptyContext","NotNull"],"mappings":"AAAA;ACAA;;;;;;;;;;;ADKA,IAAIA,UAAU,GAAI,UAAQ,SAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,QAAOC,OAAP,0DAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,OAAO,GAAI,UAAQ,SAAKA,OAAd,IAA0B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACrE,SAAO,UAAUhB,MAAV,EAAkBC,GAAlB,EAAuB;AAAEe,IAAAA,SAAS,CAAChB,MAAD,EAASC,GAAT,EAAcc,UAAd,CAAT;AAAqC,GAArE;AACH,CAFD;;AAGAR,MAAM,CAACM,cAAP,CAAsBI,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ACNA,IAAAC,YAAA,GAAAC,OAAA,CAAA,eAAA,CAAA;;AACA,IAAAC,mBAAA,GAAAD,OAAA,CAAA,sBAAA,CAAA;AAEA;;;;;;AAIA,IAAaE,cAAc,GAQ1B,wBAAYC,YAAZ,EAAsDC,EAAtD,EAAoEC,UAApE,EAAyFC,qBAAzF,EAA6I;AAAA;AAC5I,OAAKH,YAAL,GAAoBA,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsCF,mBAAA,CAAAM,iBAAA,CAAkBC,YAAlB,EAA1D;AACA,OAAKJ,EAAL,GAAUA,EAAV;AACA,OAAKC,UAAL,GAAkBA,UAAlB;AACA,OAAKC,qBAAL,GAA6BA,qBAA7B;AACA,CAbF;;AAAaJ,cAAc,GAAAxB,UAAA,CAAA,CAQoBgB,OAAA,CAAA,CAAA,EAAAK,YAAA,CAAAU,OAAA,CARpB,CAAA,EAAdP,cAAc,CAAd;AAAAL,OAAA,CAAAK,cAAA,GAAAA,cAAA","file":"SimulatorState.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Decorators_1 = require(\"../Decorators\");\nconst ParserRuleContext_1 = require(\"../ParserRuleContext\");\n/**\n *\n * @author Sam Harwell\n */\nlet SimulatorState = class SimulatorState {\n    constructor(outerContext, s0, useContext, remainingOuterContext) {\n        this.outerContext = outerContext != null ? outerContext : ParserRuleContext_1.ParserRuleContext.emptyContext();\n        this.s0 = s0;\n        this.useContext = useContext;\n        this.remainingOuterContext = remainingOuterContext;\n    }\n};\nSimulatorState = __decorate([\n    __param(1, Decorators_1.NotNull)\n], SimulatorState);\nexports.SimulatorState = SimulatorState;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:37.3871984-07:00\n\nimport { DFAState } from \"../dfa/DFAState\";\nimport { NotNull } from \"../Decorators\";\nimport { ParserRuleContext } from \"../ParserRuleContext\";\n\n/**\n *\n * @author Sam Harwell\n */\nexport class SimulatorState {\n\tpublic outerContext: ParserRuleContext;\n\n\tpublic s0: DFAState;\n\n\tpublic useContext: boolean;\n\tpublic remainingOuterContext: ParserRuleContext | undefined;\n\n\tconstructor(outerContext: ParserRuleContext, @NotNull s0: DFAState, useContext: boolean, remainingOuterContext: ParserRuleContext | undefined) {\n\t\tthis.outerContext = outerContext != null ? outerContext : ParserRuleContext.emptyContext();\n\t\tthis.s0 = s0;\n\t\tthis.useContext = useContext;\n\t\tthis.remainingOuterContext = remainingOuterContext;\n\t}\n}\n"]}