{"version":3,"sources":["atn/TransitionType.js","../src/atn/TransitionType.ts"],"names":["Object","defineProperty","exports","value","TransitionType"],"mappings":"AAAA;ACAA;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CCAA;;AAEA,IAAkBC,cAAlB;;AAAA,CAAA,UAAkBA,cAAlB,EAAgC;AAC/B;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAA;AACAA,EAAAA,cAAA,CAAAA,cAAA,CAAA,YAAA,CAAA,GAAA,EAAA,CAAA,GAAA,YAAA;AACA,CAZD,EAAkBA,cAAc,GAAdF,OAAA,CAAAE,cAAA,KAAAF,OAAA,CAAAE,cAAA,GAAc,EAAd,CAAlB","file":"TransitionType.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:37.8530496-07:00\nvar TransitionType;\n(function (TransitionType) {\n    // constants for serialization\n    TransitionType[TransitionType[\"EPSILON\"] = 1] = \"EPSILON\";\n    TransitionType[TransitionType[\"RANGE\"] = 2] = \"RANGE\";\n    TransitionType[TransitionType[\"RULE\"] = 3] = \"RULE\";\n    TransitionType[TransitionType[\"PREDICATE\"] = 4] = \"PREDICATE\";\n    TransitionType[TransitionType[\"ATOM\"] = 5] = \"ATOM\";\n    TransitionType[TransitionType[\"ACTION\"] = 6] = \"ACTION\";\n    TransitionType[TransitionType[\"SET\"] = 7] = \"SET\";\n    TransitionType[TransitionType[\"NOT_SET\"] = 8] = \"NOT_SET\";\n    TransitionType[TransitionType[\"WILDCARD\"] = 9] = \"WILDCARD\";\n    TransitionType[TransitionType[\"PRECEDENCE\"] = 10] = \"PRECEDENCE\";\n})(TransitionType = exports.TransitionType || (exports.TransitionType = {}));\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:37.8530496-07:00\n\nexport const enum TransitionType {\n\t// constants for serialization\n\tEPSILON = 1,\n\tRANGE = 2,\n\tRULE = 3,\n\tPREDICATE = 4, // e.g., {isType(input.LT(1))}?\n\tATOM = 5,\n\tACTION = 6,\n\tSET = 7, // ~(A|B) or ~atom, wildcard, which convert to next 2\n\tNOT_SET = 8,\n\tWILDCARD = 9,\n\tPRECEDENCE = 10,\n}\n"]}