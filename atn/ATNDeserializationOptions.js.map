{"version":3,"sources":["atn/ATNDeserializationOptions.js","../src/atn/ATNDeserializationOptions.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","exports","value","Decorators_1","require","ATNDeserializationOptions","options","readOnly","verifyATN","generateRuleBypassTransitions","optimize","isReadOnly","Error","throwIfReadOnly","_defaultOptions","makeReadOnly","NotNull"],"mappings":"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","file":"ATNDeserializationOptions.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:25.8187912-07:00\nconst Decorators_1 = require(\"../Decorators\");\n/**\n *\n * @author Sam Harwell\n */\nclass ATNDeserializationOptions {\n    constructor(options) {\n        this.readOnly = false;\n        if (options) {\n            this.verifyATN = options.verifyATN;\n            this.generateRuleBypassTransitions = options.generateRuleBypassTransitions;\n            this.optimize = options.optimize;\n        }\n        else {\n            this.verifyATN = true;\n            this.generateRuleBypassTransitions = false;\n            this.optimize = true;\n        }\n    }\n    static get defaultOptions() {\n        if (ATNDeserializationOptions._defaultOptions == null) {\n            ATNDeserializationOptions._defaultOptions = new ATNDeserializationOptions();\n            ATNDeserializationOptions._defaultOptions.makeReadOnly();\n        }\n        return ATNDeserializationOptions._defaultOptions;\n    }\n    get isReadOnly() {\n        return this.readOnly;\n    }\n    makeReadOnly() {\n        this.readOnly = true;\n    }\n    get isVerifyATN() {\n        return this.verifyATN;\n    }\n    set isVerifyATN(verifyATN) {\n        this.throwIfReadOnly();\n        this.verifyATN = verifyATN;\n    }\n    get isGenerateRuleBypassTransitions() {\n        return this.generateRuleBypassTransitions;\n    }\n    set isGenerateRuleBypassTransitions(generateRuleBypassTransitions) {\n        this.throwIfReadOnly();\n        this.generateRuleBypassTransitions = generateRuleBypassTransitions;\n    }\n    get isOptimize() {\n        return this.optimize;\n    }\n    set isOptimize(optimize) {\n        this.throwIfReadOnly();\n        this.optimize = optimize;\n    }\n    throwIfReadOnly() {\n        if (this.isReadOnly) {\n            throw new Error(\"The object is read only.\");\n        }\n    }\n}\n__decorate([\n    Decorators_1.NotNull\n], ATNDeserializationOptions, \"defaultOptions\", null);\nexports.ATNDeserializationOptions = ATNDeserializationOptions;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:25.8187912-07:00\n\nimport { NotNull } from \"../Decorators\";\n\n/**\n *\n * @author Sam Harwell\n */\nexport class ATNDeserializationOptions {\n\tprivate static _defaultOptions?: ATNDeserializationOptions;\n\n\tprivate readOnly: boolean = false;\n\tprivate verifyATN: boolean;\n\tprivate generateRuleBypassTransitions: boolean;\n\tprivate optimize: boolean;\n\n\tconstructor(options?: ATNDeserializationOptions) {\n\t\tif (options) {\n\t\t\tthis.verifyATN = options.verifyATN;\n\t\t\tthis.generateRuleBypassTransitions = options.generateRuleBypassTransitions;\n\t\t\tthis.optimize = options.optimize;\n\t\t} else {\n\t\t\tthis.verifyATN = true;\n\t\t\tthis.generateRuleBypassTransitions = false;\n\t\t\tthis.optimize = true;\n\t\t}\n\t}\n\n\t@NotNull\n\tstatic get defaultOptions(): ATNDeserializationOptions {\n\t\tif (ATNDeserializationOptions._defaultOptions == null) {\n\t\t\tATNDeserializationOptions._defaultOptions = new ATNDeserializationOptions();\n\t\t\tATNDeserializationOptions._defaultOptions.makeReadOnly();\n\t\t}\n\n\t\treturn ATNDeserializationOptions._defaultOptions;\n\t}\n\n\tget isReadOnly(): boolean {\n\t\treturn this.readOnly;\n\t}\n\n\tpublic makeReadOnly(): void {\n\t\tthis.readOnly = true;\n\t}\n\n\tget isVerifyATN(): boolean {\n\t\treturn this.verifyATN;\n\t}\n\n\tset isVerifyATN(verifyATN: boolean) {\n\t\tthis.throwIfReadOnly();\n\t\tthis.verifyATN = verifyATN;\n\t}\n\n\tget isGenerateRuleBypassTransitions(): boolean {\n\t\treturn this.generateRuleBypassTransitions;\n\t}\n\n\tset isGenerateRuleBypassTransitions(generateRuleBypassTransitions: boolean) {\n\t\tthis.throwIfReadOnly();\n\t\tthis.generateRuleBypassTransitions = generateRuleBypassTransitions;\n\t}\n\n\tget isOptimize(): boolean {\n\t\treturn this.optimize;\n\t}\n\n\tset isOptimize(optimize: boolean) {\n\t\tthis.throwIfReadOnly();\n\t\tthis.optimize = optimize;\n\t}\n\n\tprotected throwIfReadOnly(): void {\n\t\tif (this.isReadOnly) {\n\t\t\tthrow new Error(\"The object is read only.\");\n\t\t}\n\t}\n}\n"]}