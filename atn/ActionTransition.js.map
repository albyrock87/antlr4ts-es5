{"version":3,"sources":["atn/ActionTransition.js","../src/atn/ActionTransition.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","Decorators_1","require","Transition_1","ActionTransition","ruleIndex","actionIndex","isCtxDependent","symbol","minVocabSymbol","maxVocabSymbol","Transition","Override","prototype","NotNull"],"mappings":"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","file":"ActionTransition.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Decorators_1 = require(\"../Decorators\");\nconst Transition_1 = require(\"./Transition\");\nlet ActionTransition = class ActionTransition extends Transition_1.Transition {\n    constructor(target, ruleIndex, actionIndex = -1, isCtxDependent = false) {\n        super(target);\n        this.ruleIndex = ruleIndex;\n        this.actionIndex = actionIndex;\n        this.isCtxDependent = isCtxDependent;\n    }\n    get serializationType() {\n        return 6 /* ACTION */;\n    }\n    get isEpsilon() {\n        return true; // we are to be ignored by analysis 'cept for predicates\n    }\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n    toString() {\n        return \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n    }\n};\n__decorate([\n    Decorators_1.Override\n], ActionTransition.prototype, \"serializationType\", null);\n__decorate([\n    Decorators_1.Override\n], ActionTransition.prototype, \"isEpsilon\", null);\n__decorate([\n    Decorators_1.Override\n], ActionTransition.prototype, \"matches\", null);\n__decorate([\n    Decorators_1.Override\n], ActionTransition.prototype, \"toString\", null);\nActionTransition = __decorate([\n    __param(0, Decorators_1.NotNull)\n], ActionTransition);\nexports.ActionTransition = ActionTransition;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:24.7363448-07:00\n\nimport { ATNState } from \"./ATNState\";\nimport { Override, NotNull } from \"../Decorators\";\nimport { Transition } from \"./Transition\";\nimport { TransitionType } from \"./TransitionType\";\n\nexport class ActionTransition extends Transition {\n\tpublic ruleIndex: number;\n\tpublic actionIndex: number;\n\tpublic isCtxDependent: boolean;  // e.g., $i ref in action\n\n\tconstructor(@NotNull target: ATNState, ruleIndex: number, actionIndex: number = -1, isCtxDependent: boolean = false) {\n\t\tsuper(target);\n\t\tthis.ruleIndex = ruleIndex;\n\t\tthis.actionIndex = actionIndex;\n\t\tthis.isCtxDependent = isCtxDependent;\n\t}\n\n\t@Override\n\tget serializationType(): TransitionType {\n\t\treturn TransitionType.ACTION;\n\t}\n\n\t@Override\n\tget isEpsilon(): boolean {\n\t\treturn true; // we are to be ignored by analysis 'cept for predicates\n\t}\n\n\t@Override\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\n\t\treturn false;\n\t}\n\n\t@Override\n\tpublic toString(): string {\n\t\treturn \"action_\" + this.ruleIndex + \":\" + this.actionIndex;\n\t}\n}\n"]}