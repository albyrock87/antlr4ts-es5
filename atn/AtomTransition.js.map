{"version":3,"sources":["atn/AtomTransition.js","../src/atn/AtomTransition.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","IntervalSet_1","require","Decorators_1","Transition_1","AtomTransition","label","_label","symbol","minVocabSymbol","maxVocabSymbol","String","IntervalSet","of","Transition","Override","prototype","NotNull"],"mappings":"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","file":"AtomTransition.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IntervalSet_1 = require(\"../misc/IntervalSet\");\nconst Decorators_1 = require(\"../Decorators\");\nconst Transition_1 = require(\"./Transition\");\n/** TODO: make all transitions sets? no, should remove set edges */\nlet AtomTransition = class AtomTransition extends Transition_1.Transition {\n    constructor(target, label) {\n        super(target);\n        this._label = label;\n    }\n    get serializationType() {\n        return 5 /* ATOM */;\n    }\n    get label() {\n        return IntervalSet_1.IntervalSet.of(this._label);\n    }\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return this._label === symbol;\n    }\n    toString() {\n        return String(this.label);\n    }\n};\n__decorate([\n    Decorators_1.Override\n], AtomTransition.prototype, \"serializationType\", null);\n__decorate([\n    Decorators_1.Override,\n    Decorators_1.NotNull\n], AtomTransition.prototype, \"label\", null);\n__decorate([\n    Decorators_1.Override\n], AtomTransition.prototype, \"matches\", null);\n__decorate([\n    Decorators_1.Override,\n    Decorators_1.NotNull\n], AtomTransition.prototype, \"toString\", null);\nAtomTransition = __decorate([\n    __param(0, Decorators_1.NotNull)\n], AtomTransition);\nexports.AtomTransition = AtomTransition;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:27.6769122-07:00\n\nimport { ATNState } from \"./ATNState\";\nimport { IntervalSet } from \"../misc/IntervalSet\";\nimport { Override, NotNull } from \"../Decorators\";\nimport { Transition } from \"./Transition\";\nimport { TransitionType } from \"./TransitionType\";\n\n/** TODO: make all transitions sets? no, should remove set edges */\nexport class AtomTransition extends Transition {\n\t/** The token type or character value; or, signifies special label. */\n\tpublic _label: number;\n\n\tconstructor(@NotNull target: ATNState, label: number) {\n\t\tsuper(target);\n\t\tthis._label = label;\n\t}\n\n\t@Override\n\tget serializationType(): TransitionType {\n\t\treturn TransitionType.ATOM;\n\t}\n\n\t@Override\n\t@NotNull\n\tget label(): IntervalSet {\n\t\treturn IntervalSet.of(this._label);\n\t}\n\n\t@Override\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\n\t\treturn this._label === symbol;\n\t}\n\n\t@Override\n\t@NotNull\n\tpublic toString(): string {\n\t\treturn String(this.label);\n\t}\n}\n"]}