{"version":3,"sources":["atn/RuleTransition.js","../src/atn/RuleTransition.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","Decorators_1","require","Transition_1","RuleTransition","ruleStart","ruleIndex","precedence","followState","tailCall","optimizedTailCall","symbol","minVocabSymbol","maxVocabSymbol","Transition","NotNull","prototype","Override"],"mappings":"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","file":"RuleTransition.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Decorators_1 = require(\"../Decorators\");\nconst Transition_1 = require(\"./Transition\");\n/** */\nlet RuleTransition = class RuleTransition extends Transition_1.Transition {\n    constructor(ruleStart, ruleIndex, precedence, followState) {\n        super(ruleStart);\n        this.tailCall = false;\n        this.optimizedTailCall = false;\n        this.ruleIndex = ruleIndex;\n        this.precedence = precedence;\n        this.followState = followState;\n    }\n    get serializationType() {\n        return 3 /* RULE */;\n    }\n    get isEpsilon() {\n        return true;\n    }\n    matches(symbol, minVocabSymbol, maxVocabSymbol) {\n        return false;\n    }\n};\n__decorate([\n    Decorators_1.NotNull\n], RuleTransition.prototype, \"followState\", void 0);\n__decorate([\n    Decorators_1.Override\n], RuleTransition.prototype, \"serializationType\", null);\n__decorate([\n    Decorators_1.Override\n], RuleTransition.prototype, \"isEpsilon\", null);\n__decorate([\n    Decorators_1.Override\n], RuleTransition.prototype, \"matches\", null);\nRuleTransition = __decorate([\n    __param(0, Decorators_1.NotNull), __param(3, Decorators_1.NotNull)\n], RuleTransition);\nexports.RuleTransition = RuleTransition;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:36.8294453-07:00\n\nimport { ATNState } from \"./ATNState\";\nimport { Override, NotNull } from \"../Decorators\";\nimport { RuleStartState } from \"./RuleStartState\";\nimport { Transition } from \"./Transition\";\nimport { TransitionType } from \"./TransitionType\";\n\n/** */\nexport class RuleTransition extends Transition {\n\t/** Ptr to the rule definition object for this rule ref */\n\tpublic ruleIndex: number;      // no Rule object at runtime\n\n\tpublic precedence: number;\n\n\t/** What node to begin computations following ref to rule */\n\t@NotNull\n\tpublic followState: ATNState;\n\n\tpublic tailCall: boolean = false;\n\tpublic optimizedTailCall: boolean = false;\n\n\tconstructor(@NotNull ruleStart: RuleStartState, ruleIndex: number, precedence: number, @NotNull followState: ATNState) {\n\t\tsuper(ruleStart);\n\t\tthis.ruleIndex = ruleIndex;\n\t\tthis.precedence = precedence;\n\t\tthis.followState = followState;\n\t}\n\n\t@Override\n\tget serializationType(): TransitionType {\n\t\treturn TransitionType.RULE;\n\t}\n\n\t@Override\n\tget isEpsilon(): boolean {\n\t\treturn true;\n\t}\n\n\t@Override\n\tpublic matches(symbol: number, minVocabSymbol: number, maxVocabSymbol: number): boolean {\n\t\treturn false;\n\t}\n}\n"]}