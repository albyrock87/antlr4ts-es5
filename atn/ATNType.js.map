{"version":3,"sources":["atn/ATNType.js","../src/atn/ATNType.ts"],"names":["Object","defineProperty","exports","value","ATNType"],"mappings":"AAAA;ACAA;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CCAA;;AAEA;;;;;;AAKA,IAAkBC,OAAlB;;AAAA,CAAA,UAAkBA,OAAlB,EAAyB;AAExB;;;AAGAA,EAAAA,OAAA,CAAAA,OAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAA;AAEA;;;;AAGAA,EAAAA,OAAA,CAAAA,OAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAA;AAEA,CAZD,EAAkBA,OAAO,GAAPF,OAAA,CAAAE,OAAA,KAAAF,OAAA,CAAAE,OAAA,GAAO,EAAP,CAAlB","file":"ATNType.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:27.6094030-07:00\n/**\n * Represents the type of recognizer an ATN applies to.\n *\n * @author Sam Harwell\n */\nvar ATNType;\n(function (ATNType) {\n    /**\n     * A lexer grammar.\n     */\n    ATNType[ATNType[\"LEXER\"] = 0] = \"LEXER\";\n    /**\n     * A parser grammar.\n     */\n    ATNType[ATNType[\"PARSER\"] = 1] = \"PARSER\";\n})(ATNType = exports.ATNType || (exports.ATNType = {}));\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:27.6094030-07:00\n\n/**\n * Represents the type of recognizer an ATN applies to.\n *\n * @author Sam Harwell\n */\nexport const enum ATNType {\n\n\t/**\n\t * A lexer grammar.\n\t */\n\tLEXER,\n\n\t/**\n\t * A parser grammar.\n\t */\n\tPARSER,\n\n}\n"]}