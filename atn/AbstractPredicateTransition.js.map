{"version":3,"sources":["atn/AbstractPredicateTransition.js","../src/atn/AbstractPredicateTransition.ts"],"names":["Object","defineProperty","exports","value","Transition_1","require","AbstractPredicateTransition","target","Transition"],"mappings":"AAAA;ACAA;;;;;;;;;;;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ACGA,IAAAC,YAAA,GAAAC,OAAA,CAAA,cAAA,CAAA;AAEA;;;;;;IAIAC,2B;;;;;AAEC,uCAAYC,MAAZ,EAA4B;AAAA;AAAA,sIACrBA,MADqB;AAE3B;;;EAJwDH,YAAA,CAAAI,U;;AAA1DN,OAAA,CAAAI,2BAAA,GAAAA,2BAAA","file":"AbstractPredicateTransition.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Transition_1 = require(\"./Transition\");\n/**\n *\n * @author Sam Harwell\n */\nclass AbstractPredicateTransition extends Transition_1.Transition {\n    constructor(target) {\n        super(target);\n    }\n}\nexports.AbstractPredicateTransition = AbstractPredicateTransition;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:24.6596177-07:00\n\nimport { ATNState } from \"./ATNState\";\nimport { Transition } from \"./Transition\";\n\n/**\n *\n * @author Sam Harwell\n */\nexport abstract class AbstractPredicateTransition extends Transition {\n\n\tconstructor(target: ATNState) {\n\t\tsuper(target);\n\t}\n\n}\n"]}