{"version":3,"sources":["misc/MultiMap.js","../src/misc/MultiMap.ts"],"names":["Object","defineProperty","exports","value","MultiMap","key","elementsForKey","push","pairs","forEach","values","v","Map"],"mappings":"AAAA;ACAA;;;;;;;;;;;;;;;;;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CCAA;;IAEAC,Q;;;;;AACC,sBAAA;AAAA;AAAA;AAEC;;;;wBAEUC,G,EAAQF,K,EAAQ;AAC1B,UAAIG,cAAc,uGAAaD,GAAb,CAAlB;;AACA,UAAI,CAACC,cAAL,EAAqB;AACpBA,QAAAA,cAAc,GAAG,EAAjB;AACA,4GAAUD,GAAV,EAAeC,cAAf;AACA;;AACDA,MAAAA,cAAc,CAACC,IAAf,CAAoBJ,KAApB;AACA;;;+BAEc;AACd,UAAIK,KAAK,GAAkB,EAA3B;AACA,WAAKC,OAAL,CAAa,UAACC,MAAD,EAAcL,GAAd,EAAwB;AACpCK,QAAAA,MAAM,CAACD,OAAP,CAAe,UAACE,CAAD,EAAM;AACpBH,UAAAA,KAAK,CAACD,IAAN,CAAW,CAACF,GAAD,EAAMM,CAAN,CAAX;AACA,SAFD;AAGA,OAJD;AAKA,aAAOH,KAAP;AACA;;;oCAtBkCI,G;;AAApCV,OAAA,CAAAE,QAAA,GAAAA,QAAA","file":"MultiMap.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:42.1346951-07:00\nclass MultiMap extends Map {\n    constructor() {\n        super();\n    }\n    map(key, value) {\n        let elementsForKey = super.get(key);\n        if (!elementsForKey) {\n            elementsForKey = [];\n            super.set(key, elementsForKey);\n        }\n        elementsForKey.push(value);\n    }\n    getPairs() {\n        let pairs = [];\n        this.forEach((values, key) => {\n            values.forEach((v) => {\n                pairs.push([key, v]);\n            });\n        });\n        return pairs;\n    }\n}\nexports.MultiMap = MultiMap;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:42.1346951-07:00\n\nexport class MultiMap<K, V> extends Map<K, V[]> {\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tpublic map(key: K, value: V): void {\n\t\tlet elementsForKey = super.get(key);\n\t\tif (!elementsForKey) {\n\t\t\telementsForKey = [] as V[];\n\t\t\tsuper.set(key, elementsForKey);\n\t\t}\n\t\telementsForKey.push(value);\n\t}\n\n\tpublic getPairs(): Array<[K, V]> {\n\t\tlet pairs: Array<[K, V]> = [];\n\t\tthis.forEach((values: V[], key: K) => {\n\t\t\tvalues.forEach((v) => {\n\t\t\t\tpairs.push([key, v]);\n\t\t\t});\n\t\t});\n\t\treturn pairs;\n\t}\n}\n"]}