{"version":3,"sources":["misc/Args.js","../src/misc/Args.ts"],"names":["Object","defineProperty","exports","value","notNull","parameterName","TypeError"],"mappings":"AAAA;ACAA;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CCAA;;AAEA;;;;;;;;;AAQA,SAAAC,OAAA,CAAwBC,aAAxB,EAA+CF,KAA/C,EAAyD;AACxD,MAAIA,KAAK,IAAI,IAAb,EAAmB;AAClB,UAAM,IAAIG,SAAJ,CAAcD,aAAa,GAAG,+BAA9B,CAAN;AACA;AACD;;AAJDH,OAAA,CAAAE,OAAA,GAAAA,OAAA","file":"Args.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:39.6568608-07:00\n/**\n * Validates that an argument is not `null` or `undefined`.\n *\n * @param parameterName The name of the parameter\n * @param value The argument value\n *\n * @throws `TypeError` if `value` is `null` or `undefined`.\n */\nfunction notNull(parameterName, value) {\n    if (value == null) {\n        throw new TypeError(parameterName + \" cannot be null or undefined.\");\n    }\n}\nexports.notNull = notNull;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:39.6568608-07:00\n\n/**\n * Validates that an argument is not `null` or `undefined`.\n *\n * @param parameterName The name of the parameter\n * @param value The argument value\n *\n * @throws `TypeError` if `value` is `null` or `undefined`.\n */\nexport function notNull(parameterName: string, value: any): void {\n\tif (value == null) {\n\t\tthrow new TypeError(parameterName + \" cannot be null or undefined.\");\n\t}\n}\n"]}