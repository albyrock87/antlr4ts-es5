{"version":3,"sources":["misc/IntegerStack.js","../src/misc/IntegerStack.ts"],"names":["Object","defineProperty","exports","value","IntegerList_1","require","IntegerStack","arg","add","removeAt","size","get","IntegerList"],"mappings":"AAAA;ACAA;;;;;;;;;;;;;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CCAA;;AAEA,IAAAC,aAAA,GAAAC,OAAA,CAAA,eAAA,CAAA;AAEA;;;;;;IAIAC,Y;;;;;AAEC,wBAAYC,GAAZ,EAAuC;AAAA;AAAA,uHAChCA,GADgC;AAEtC;;;;yBAEWJ,K,EAAa;AACxB,WAAKK,GAAL,CAASL,KAAT;AACA;;;0BAES;AACT,aAAO,KAAKM,QAAL,CAAc,KAAKC,IAAL,GAAY,CAA1B,CAAP;AACA;;;2BAEU;AACV,aAAO,KAAKC,GAAL,CAAS,KAAKD,IAAL,GAAY,CAArB,CAAP;AACA;;;EAhBgCN,aAAA,CAAAQ,W;;AAAlCV,OAAA,CAAAI,YAAA,GAAAA,YAAA","file":"IntegerStack.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:40.6647101-07:00\nconst IntegerList_1 = require(\"./IntegerList\");\n/**\n *\n * @author Sam Harwell\n */\nclass IntegerStack extends IntegerList_1.IntegerList {\n    constructor(arg) {\n        super(arg);\n    }\n    push(value) {\n        this.add(value);\n    }\n    pop() {\n        return this.removeAt(this.size - 1);\n    }\n    peek() {\n        return this.get(this.size - 1);\n    }\n}\nexports.IntegerStack = IntegerStack;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:40.6647101-07:00\n\nimport { IntegerList } from \"./IntegerList\";\n\n/**\n *\n * @author Sam Harwell\n */\nexport class IntegerStack extends IntegerList {\n\n\tconstructor(arg?: number | IntegerStack) {\n\t\tsuper(arg);\n\t}\n\n\tpublic push(value: number): void {\n\t\tthis.add(value);\n\t}\n\n\tpublic pop(): number {\n\t\treturn this.removeAt(this.size - 1);\n\t}\n\n\tpublic peek(): number {\n\t\treturn this.get(this.size - 1);\n\t}\n\n}\n"]}