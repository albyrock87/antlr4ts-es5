{"version":3,"sources":["Decorators.js","../src/Decorators.ts"],"names":["Object","defineProperty","exports","value","NotNull","target","propertyKey","propertyDescriptor","Nullable","Override","SuppressWarnings","options","descriptor"],"mappings":"AAAA;ACAA;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ACAA,SAAAC,OAAA,CACCC,MADD,EAECC,WAFD,EAGCC,kBAHD,EAGiD,CAChD;AACA;;AALDL,OAAA,CAAAE,OAAA,GAAAA,OAAA;;AAOA,SAAAI,QAAA,CACCH,MADD,EAECC,WAFD,EAGCC,kBAHD,EAGiD,CAChD;AACA;;AALDL,OAAA,CAAAM,QAAA,GAAAA,QAAA;;AAOA,SAAAC,QAAA,CACCJ,MADD,EAECC,WAFD,EAGCC,kBAHD,EAGwC,CACvC;AACA;;AALDL,OAAA,CAAAO,QAAA,GAAAA,QAAA;;AAOA,SAAAC,gBAAA,CAAiCC,OAAjC,EAAgD;AAC/C,SAAO,UAACN,MAAD,EAAcC,WAAd,EAAwCM,UAAxC,EAA2E,CACjF;AACA,GAFD;AAGA;;AAJDV,OAAA,CAAAQ,gBAAA,GAAAA,gBAAA","file":"Decorators.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction NotNull(target, propertyKey, propertyDescriptor) {\n    // intentionally empty\n}\nexports.NotNull = NotNull;\nfunction Nullable(target, propertyKey, propertyDescriptor) {\n    // intentionally empty\n}\nexports.Nullable = Nullable;\nfunction Override(target, propertyKey, propertyDescriptor) {\n    // do something with 'target' ...\n}\nexports.Override = Override;\nfunction SuppressWarnings(options) {\n    return (target, propertyKey, descriptor) => {\n        // intentionally empty\n    };\n}\nexports.SuppressWarnings = SuppressWarnings;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\nexport function NotNull(\n\ttarget: any,\n\tpropertyKey: PropertyKey,\n\tpropertyDescriptor?: PropertyDescriptor | number) {\n\t// intentionally empty\n}\n\nexport function Nullable(\n\ttarget: any,\n\tpropertyKey: PropertyKey,\n\tpropertyDescriptor?: PropertyDescriptor | number) {\n\t// intentionally empty\n}\n\nexport function Override(\n\ttarget: any,\n\tpropertyKey: PropertyKey,\n\tpropertyDescriptor?: PropertyDescriptor) {\n\t// do something with 'target' ...\n}\n\nexport function SuppressWarnings(options: string) {\n\treturn (target: any, propertyKey: PropertyKey, descriptor?: PropertyDescriptor) => {\n\t\t// intentionally empty\n\t};\n}\n"]}