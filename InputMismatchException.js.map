{"version":3,"sources":["InputMismatchException.js","../src/InputMismatchException.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","RecognitionException_1","require","Decorators_1","InputMismatchException","recognizer","state","context","undefined","inputStream","setOffendingState","setOffendingToken","currentToken","RecognitionException","NotNull"],"mappings":"AAAA;ACAA;;;;;;;;;;;;;;;;;ADKA,IAAIA,UAAU,GAAI,UAAQ,SAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,QAAOC,OAAP,0DAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,OAAO,GAAI,UAAQ,SAAKA,OAAd,IAA0B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACrE,SAAO,UAAUhB,MAAV,EAAkBC,GAAlB,EAAuB;AAAEe,IAAAA,SAAS,CAAChB,MAAD,EAASC,GAAT,EAAcc,UAAd,CAAT;AAAqC,GAArE;AACH,CAFD;;AAGAR,MAAM,CAACM,cAAP,CAAsBI,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C,E,CCTA;;AAEA,IAAAC,sBAAA,GAAAC,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAAC,YAAA,GAAAD,OAAA,CAAA,cAAA,CAAA;AAIA;;;;;AAGA,IAAaE,sBAAsB;AAAA;AAAA;AAAA;;AAKlC,kCAAqBC,UAArB,EAAyCC,KAAzC,EAAyDC,OAAzD,EAAoF;AAAA;;AAAA;;AACnF,QAAIA,OAAO,KAAKC,SAAhB,EAA2B;AAC1BD,MAAAA,OAAO,GAAGF,UAAU,CAACE,OAArB;AACA;;AAED,kIAAMF,UAAN,EAAkBA,UAAU,CAACI,WAA7B,EAA0CF,OAA1C;;AAEA,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACxB,YAAKE,iBAAL,CAAuBJ,KAAvB;AACA;;AAED,UAAKK,iBAAL,CAAuBN,UAAvB,EAAmCA,UAAU,CAACO,YAA9C;;AAXmF;AAYnF;;AAjBiC;AAAA,EAASX,sBAAA,CAAAY,oBAAT,CAAnC;;AAAaT,sBAAsB,GAAAxB,UAAA,CAAA,CAKrBgB,OAAA,CAAA,CAAA,EAAAO,YAAA,CAAAW,OAAA,CALqB,CAAA,EAAtBV,sBAAsB,CAAtB;AAAAL,OAAA,CAAAK,sBAAA,GAAAA,sBAAA","file":"InputMismatchException.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// ConvertTo-TS run at 2016-10-04T11:26:51.5187682-07:00\nconst RecognitionException_1 = require(\"./RecognitionException\");\nconst Decorators_1 = require(\"./Decorators\");\n/** This signifies any kind of mismatched input exceptions such as\n *  when the current input does not match the expected token.\n */\nlet InputMismatchException = class InputMismatchException extends RecognitionException_1.RecognitionException {\n    constructor(recognizer, state, context) {\n        if (context === undefined) {\n            context = recognizer.context;\n        }\n        super(recognizer, recognizer.inputStream, context);\n        if (state !== undefined) {\n            this.setOffendingState(state);\n        }\n        this.setOffendingToken(recognizer, recognizer.currentToken);\n    }\n};\nInputMismatchException = __decorate([\n    __param(0, Decorators_1.NotNull)\n], InputMismatchException);\nexports.InputMismatchException = InputMismatchException;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:51.5187682-07:00\n\nimport { RecognitionException } from \"./RecognitionException\";\nimport { NotNull } from \"./Decorators\";\nimport { Parser } from \"./Parser\";\nimport { ParserRuleContext } from \"./ParserRuleContext\";\n\n/** This signifies any kind of mismatched input exceptions such as\n *  when the current input does not match the expected token.\n */\nexport class InputMismatchException extends RecognitionException {\n\t//private static serialVersionUID: number =  1532568338707443067L;\n\n\tconstructor(/*@NotNull*/ recognizer: Parser);\n\tconstructor(/*@NotNull*/ recognizer: Parser, state: number, context: ParserRuleContext);\n\tconstructor(@NotNull recognizer: Parser, state?: number, context?: ParserRuleContext) {\n\t\tif (context === undefined) {\n\t\t\tcontext = recognizer.context;\n\t\t}\n\n\t\tsuper(recognizer, recognizer.inputStream, context);\n\n\t\tif (state !== undefined) {\n\t\t\tthis.setOffendingState(state);\n\t\t}\n\n\t\tthis.setOffendingToken(recognizer, recognizer.currentToken);\n\t}\n}\n"]}