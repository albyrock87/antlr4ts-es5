{"version":3,"sources":["dfa/LexerDFASerializer.js","../src/dfa/LexerDFASerializer.ts"],"names":["__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","exports","value","DFASerializer_1","require","Decorators_1","VocabularyImpl_1","LexerDFASerializer","dfa","VocabularyImpl","EMPTY_VOCABULARY","String","fromCodePoint","DFASerializer","Override","NotNull","prototype"],"mappings":"AAAA;ACAA;;;;;;;;;;;;;;;;;;;ADKA,IAAIA,UAAU,GAAI,UAAQ,SAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;AACnF,MAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;AAAA,MAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGK,MAAM,CAACC,wBAAP,CAAgCR,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;AAAA,MAA2HO,CAA3H;AACA,MAAI,QAAOC,OAAP,0DAAOA,OAAP,OAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EL,CAAC,GAAGI,OAAO,CAACC,QAAR,CAAiBZ,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCO,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C;AAAiD,QAAIH,CAAC,GAAGV,UAAU,CAACa,CAAD,CAAlB,EAAuBN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACH,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQM,CAAC,CAACT,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BG,CAAC,CAACT,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;AAAxE;AACL,SAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAcC,MAAM,CAACM,cAAP,CAAsBb,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,IAAIQ,OAAO,GAAI,UAAQ,SAAKA,OAAd,IAA0B,UAAUC,UAAV,EAAsBC,SAAtB,EAAiC;AACrE,SAAO,UAAUhB,MAAV,EAAkBC,GAAlB,EAAuB;AAAEe,IAAAA,SAAS,CAAChB,MAAD,EAASC,GAAT,EAAcc,UAAd,CAAT;AAAqC,GAArE;AACH,CAFD;;AAGAR,MAAM,CAACM,cAAP,CAAsBI,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ACNA,IAAAC,eAAA,GAAAC,OAAA,CAAA,iBAAA,CAAA;;AACA,IAAAC,YAAA,GAAAD,OAAA,CAAA,eAAA,CAAA;;AACA,IAAAE,gBAAA,GAAAF,OAAA,CAAA,mBAAA,CAAA;;AAEA,IAAaG,kBAAkB;AAAA;AAAA;AAAA;;AAC9B,8BAAsBC,GAAtB,EAA8B;AAAA;AAAA,6HACvBA,GADuB,EAClBF,gBAAA,CAAAG,cAAA,CAAeC,gBADG;AAE7B;;AAH6B;AAAA;AAAA,iCAOPd,CAPO,EAOE;AAC/B,aAAO,MAAMe,MAAM,CAACC,aAAP,CAAqBhB,CAArB,CAAN,GAAgC,GAAvC;AACA;AAT6B;AAAA;AAAA,EAASO,eAAA,CAAAU,aAAT,CAA/B;;AAOC/B,UAAA,CAAA,CAFCuB,YAAA,CAAAS,QAED,EADCT,YAAA,CAAAU,OACD,CAAA,EDUER,kBAAkB,CAACS,SCVrB,EDUgC,cCVhC,EDUgD,ICVhD,CAAA;;AAPYT,kBAAkB,GAAAzB,UAAA,CAAA,CAChBgB,OAAA,CAAA,CAAA,EAAAO,YAAA,CAAAU,OAAA,CADgB,CAAA,EAAlBR,kBAAkB,CAAlB;AAAAN,OAAA,CAAAM,kBAAA,GAAAA,kBAAA","file":"LexerDFASerializer.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DFASerializer_1 = require(\"./DFASerializer\");\nconst Decorators_1 = require(\"../Decorators\");\nconst VocabularyImpl_1 = require(\"../VocabularyImpl\");\nlet LexerDFASerializer = class LexerDFASerializer extends DFASerializer_1.DFASerializer {\n    constructor(dfa) {\n        super(dfa, VocabularyImpl_1.VocabularyImpl.EMPTY_VOCABULARY);\n    }\n    getEdgeLabel(i) {\n        return \"'\" + String.fromCodePoint(i) + \"'\";\n    }\n};\n__decorate([\n    Decorators_1.Override,\n    Decorators_1.NotNull\n], LexerDFASerializer.prototype, \"getEdgeLabel\", null);\nLexerDFASerializer = __decorate([\n    __param(0, Decorators_1.NotNull)\n], LexerDFASerializer);\nexports.LexerDFASerializer = LexerDFASerializer;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:39.2167238-07:00\n\nimport { DFA } from \"./DFA\";\nimport { DFASerializer } from \"./DFASerializer\";\nimport { NotNull, Override } from \"../Decorators\";\nimport { VocabularyImpl } from \"../VocabularyImpl\";\n\nexport class LexerDFASerializer extends DFASerializer {\n\tconstructor( @NotNull dfa: DFA) {\n\t\tsuper(dfa, VocabularyImpl.EMPTY_VOCABULARY);\n\t}\n\n\t@Override\n\t@NotNull\n\tprotected getEdgeLabel(i: number): string {\n\t\treturn \"'\" + String.fromCodePoint(i) + \"'\";\n\t}\n}\n"]}