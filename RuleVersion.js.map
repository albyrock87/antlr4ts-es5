{"version":3,"sources":["RuleVersion.js","../src/RuleVersion.ts"],"names":["Object","defineProperty","exports","value","RuleVersion","version","target","propertyKey","propertyDescriptor"],"mappings":"AAAA;ACAA;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;ACKA;;;;;AAIA,SAAAC,WAAA,CAA4BC,OAA5B,EAA2C;AAE1C,SAAO,UAA8BC,MAA9B,EAA8CC,WAA9C,EAAwEC,kBAAxE,EAA8I,CACpJ;AACA,GAFD;AAIA;;AANDN,OAAA,CAAAE,WAAA,GAAAA,WAAA","file":"RuleVersion.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n *\n * @author Sam Harwell\n */\nfunction RuleVersion(version) {\n    return (target, propertyKey, propertyDescriptor) => {\n        // intentionally empty\n    };\n}\nexports.RuleVersion = RuleVersion;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:57.7170027-07:00\n\nimport { Parser } from \"./Parser\";\nimport { ParserRuleContext } from \"./ParserRuleContext\";\n\n/**\n *\n * @author Sam Harwell\n */\nexport function RuleVersion(version: number) {\n\n\treturn <T extends ParserRuleContext>(target: Parser, propertyKey: PropertyKey, propertyDescriptor: TypedPropertyDescriptor<(...args: any[]) => T>) => {\n\t\t// intentionally empty\n\t};\n\n}\n"]}