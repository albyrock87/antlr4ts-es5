{"version":3,"sources":["tree/RuleNode.js","../src/tree/RuleNode.ts"],"names":["Object","defineProperty","exports","value","RuleNode"],"mappings":"AAAA;ACAA;;;;;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;ICQAC,Q;;;;AAAAF,OAAA,CAAAE,QAAA,GAAAA,QAAA","file":"RuleNode.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RuleNode {\n}\nexports.RuleNode = RuleNode;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:47.9232756-07:00\n\nimport { RuleContext } from \"../RuleContext\";\nimport { ParseTree } from \"./ParseTree\";\nimport { ParseTreeVisitor } from \"./ParseTreeVisitor\";\nimport { Parser } from \"../Parser\";\nimport { Interval } from \"../misc/Interval\";\n\nexport abstract class RuleNode implements ParseTree {\n\tpublic abstract readonly ruleContext: RuleContext;\n\n\t//@Override\n\tpublic abstract readonly parent: RuleNode | undefined;\n\n\tpublic abstract setParent(parent: RuleContext): void;\n\n\tpublic abstract getChild(i: number): ParseTree;\n\n\tpublic abstract accept<T>(visitor: ParseTreeVisitor<T>): T;\n\n\tpublic abstract readonly text: string;\n\n\tpublic abstract toStringTree(parser?: Parser | undefined): string;\n\n\tpublic abstract readonly sourceInterval: Interval;\n\n\tpublic abstract readonly payload: any;\n\n\tpublic abstract readonly childCount: number;\n}\n"]}