{"version":3,"sources":["tree/ParseTreeProperty.js","../src/tree/ParseTreeProperty.ts"],"names":["Object","defineProperty","exports","value","ParseTreeProperty","name","_symbol","Symbol","node","result"],"mappings":"AAAA;ACAA;;;;;;;;;;;ADKAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;ACIA;;;;;;;;;;;;;;;;;IAgBAC,iB;;;AAGC,+BAA8C;AAAA,QAAlCC,IAAkC,uEAAnB,mBAAmB;AAAA;AAC7C,SAAKC,OAAL,GAAeC,MAAM,CAACF,IAAD,CAArB;AACA;;;;wBAEUG,I,EAAe;AACzB,aAAQA,IAAY,CAAC,KAAKF,OAAN,CAApB;AACA;;;wBAEUE,I,EAAiBL,K,EAAQ;AAClCK,MAAAA,IAAY,CAAC,KAAKF,OAAN,CAAZ,GAA6BH,KAA7B;AACD;;;+BAEiBK,I,EAAe;AAChC,UAAIC,MAAM,GAAID,IAAY,CAAC,KAAKF,OAAN,CAA1B;AACA,aAAQE,IAAY,CAAC,KAAKF,OAAN,CAApB;AACA,aAAOG,MAAP;AACA;;;;;AAnBFP,OAAA,CAAAE,iBAAA,GAAAA,iBAAA","file":"ParseTreeProperty.js","sourcesContent":["\"use strict\";\n/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Associate a property with a parse tree node. Useful with parse tree listeners\n * that need to associate values with particular tree nodes, kind of like\n * specifying a return value for the listener event method that visited a\n * particular node. Example:\n *\n * ```\n * ParseTreeProperty<Integer> values = new ParseTreeProperty<Integer>();\n * values.put(tree, 36);\n * int x = values.get(tree);\n * values.removeFrom(tree);\n * ```\n *\n * You would make one decl (values here) in the listener and use lots of times\n * in your event methods.\n */\nclass ParseTreeProperty {\n    constructor(name = \"ParseTreeProperty\") {\n        this._symbol = Symbol(name);\n    }\n    get(node) {\n        return node[this._symbol];\n    }\n    set(node, value) {\n        node[this._symbol] = value;\n    }\n    removeFrom(node) {\n        let result = node[this._symbol];\n        delete node[this._symbol];\n        return result;\n    }\n}\nexports.ParseTreeProperty = ParseTreeProperty;\n","/*!\n * Copyright 2016 The ANTLR Project. All rights reserved.\n * Licensed under the BSD-3-Clause license. See LICENSE file in the project root for license information.\n */\n\n// ConvertTo-TS run at 2016-10-04T11:26:47.6782223-07:00\n\nimport { ParseTree } from \"./ParseTree\";\n\n/**\n * Associate a property with a parse tree node. Useful with parse tree listeners\n * that need to associate values with particular tree nodes, kind of like\n * specifying a return value for the listener event method that visited a\n * particular node. Example:\n *\n * ```\n * ParseTreeProperty<Integer> values = new ParseTreeProperty<Integer>();\n * values.put(tree, 36);\n * int x = values.get(tree);\n * values.removeFrom(tree);\n * ```\n *\n * You would make one decl (values here) in the listener and use lots of times\n * in your event methods.\n */\nexport class ParseTreeProperty<V> {\n\tprivate _symbol: symbol;\n\n\tconstructor(name: string = \"ParseTreeProperty\") {\n\t\tthis._symbol = Symbol(name);\n\t}\n\n\tpublic get(node: ParseTree): V {\n\t\treturn (node as any)[this._symbol] as V;\n\t}\n\n\tpublic set(node: ParseTree, value: V): void {\n\t\t(node as any)[this._symbol] = value;\n\t}\n\n\tpublic removeFrom(node: ParseTree): V {\n\t\tlet result = (node as any)[this._symbol] as V;\n\t\tdelete (node as any)[this._symbol];\n\t\treturn result;\n\t}\n}\n"]}